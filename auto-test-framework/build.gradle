buildDir = 'target'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

sourceSets.main.resources {
    if (project.hasProperty('profile')) {
        srcDir 'src/main/resources-' + project.profile
        srcDir 'src/test/resources-' + project.profile
    } else {
        srcDir 'src/main/resources-test'
        srcDir 'src/test/resources-test'
    }
}

clean.doLast {
    delete projectDir.path + '/target'
}

configurations {
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-configuration-processor')

    // 基于jupiter进行扩展,引入相关依赖
    implementation('org.junit.jupiter:junit-jupiter:5.6.2')
    implementation('org.junit.jupiter:junit-jupiter-engine:5.6.2')
    implementation('org.junit.jupiter:junit-jupiter-api:5.6.2')
    implementation('org.junit.platform:junit-platform-runner:1.6.2')
    implementation('org.junit.platform:junit-platform-launcher:1.6.2')

    implementation('com.squareup.okhttp3:okhttp:4.8.1')

    implementation('com.fasterxml.jackson.core:jackson-databind:2.11.2')
    implementation('com.fasterxml.jackson.core:jackson-dataformat-yaml:2.11.2')

    implementation('org.springframework:spring-jdbc:5.2.8.RELEASE')
}
